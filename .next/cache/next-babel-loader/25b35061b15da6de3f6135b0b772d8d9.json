{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\derec\\\\Desktop\\\\task11\\\\pages\\\\info.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from './../components/Layout';\nconst colorStyle = {\n  color: 'black'\n};\nlet region;\n\nconst Info = props => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, __jsx(\"h1\", {\n  style: colorStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, props.region.name), __jsx(\"img\", {\n  src: props.region.flag,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}), __jsx(\"p\", {\n  style: colorStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, \"Langauges: \", props.region.languages), __jsx(\"p\", {\n  style: colorStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, \"Population: \", props.region.population), __jsx(\"p\", {\n  style: colorStyle,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, \"Currencies: \", props.region.currencies));\n\nInfo.getInitialProps = async function (context) {\n  const {\n    name\n  } = context.query;\n  const res = await fetch(`https://restcountries.eu/rest/v2/regionalbloc/${name}`);\n  const region = await res.json();\n  setTimeout(() => {\n    console.log(`Fetched country: ${region}`);\n  }, 500);\n  return {\n    regions: region\n  };\n};\n\nexport default Info;","map":{"version":3,"sources":["C:/Users/derec/Desktop/task11/pages/info.js"],"names":["fetch","Layout","colorStyle","color","region","Info","props","name","flag","languages","population","currencies","getInitialProps","context","query","res","json","setTimeout","console","log","regions"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;AAGA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAET,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA;AAAI,EAAA,KAAK,EAAEJ,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAwBI,KAAK,CAACF,MAAN,CAAaG,IAArC,CADA,EAEA;AAAK,EAAA,GAAG,EAAED,KAAK,CAACF,MAAN,CAAaI,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFA,EAGA;AAAG,EAAA,KAAK,EAAEN,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkCI,KAAK,CAACF,MAAN,CAAaK,SAA/C,CAHA,EAIA;AAAG,EAAA,KAAK,EAAEP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmCI,KAAK,CAACF,MAAN,CAAaM,UAAhD,CAJA,EAKA;AAAG,EAAA,KAAK,EAAER,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmCI,KAAK,CAACF,MAAN,CAAaO,UAAhD,CALA,CAFJ;;AAWAN,IAAI,CAACO,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC5C,QAAM;AAAEN,IAAAA;AAAF,MAAWM,OAAO,CAACC,KAAzB;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAE,iDAAgDO,IAAK,EAAvD,CAAvB;AACA,QAAMH,MAAM,GAAG,MAAMW,GAAG,CAACC,IAAJ,EAArB;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBf,MAAO,EAAvC;AACH,GAFS,EAEP,GAFO,CAAV;AAKA,SAAO;AACHgB,IAAAA,OAAO,EAAEhB;AADN,GAAP;AAGH,CAbD;;AAeA,eAAeC,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Layout from './../components/Layout';\r\n\r\nconst colorStyle = {\r\n    color: 'black'\r\n}\r\nlet region;\r\n\r\nconst Info = (props) => (\r\n    \r\n    <Layout>\r\n    <h1 style={colorStyle}>{props.region.name}</h1>\r\n    <img src={props.region.flag} />\r\n    <p style={colorStyle}>Langauges: {props.region.languages}</p>\r\n    <p style={colorStyle}>Population: {props.region.population}</p>\r\n    <p style={colorStyle}>Currencies: {props.region.currencies}</p>\r\n    </Layout>\r\n)\r\n\r\nInfo.getInitialProps = async function (context) {\r\n    const { name } = context.query\r\n    const res = await fetch(`https://restcountries.eu/rest/v2/regionalbloc/${name}`)\r\n    const region = await res.json()\r\n\r\n    setTimeout(() => {\r\n        console.log(`Fetched country: ${region}`)\r\n    }, 500);\r\n    \r\n\r\n    return { \r\n        regions: region \r\n    }\r\n}\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}