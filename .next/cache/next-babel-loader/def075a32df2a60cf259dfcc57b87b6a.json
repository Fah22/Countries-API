{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from './../components/Layout';\nvar colorStyle = {\n  color: 'white'\n};\n\nvar Info = function Info(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    style: colorStyle\n  }, props.region.name), __jsx(\"img\", {\n    src: props.region.flag\n  }), __jsx(\"p\", null, \"Langauges: \", props.country.languages), __jsx(\"p\", null, \"Population: \", props.country.population), __jsx(\"p\", null, \"Currencies: \", props.country.currencies));\n};\n\nInfo.getInitialProps = function _callee(context) {\n  var name, res, country;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          name = context.query.name;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"https://restcountries.eu/rest/v2/africa/\".concat(name)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          country = _context.sent;\n          console.log(\"Fetched country: \".concat(country.name));\n          return _context.abrupt(\"return\", {\n            country: country\n          });\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Info;","map":{"version":3,"sources":["C:/Users/derec/Desktop/task11/pages/info.js"],"names":["fetch","Layout","colorStyle","color","Info","props","region","name","flag","country","languages","population","currencies","getInitialProps","context","query","res","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD,QACA;AAAI,IAAA,KAAK,EAAEH;AAAX,KAAwBG,KAAK,CAACC,MAAN,CAAaC,IAArC,CADA,EAEA;AAAK,IAAA,GAAG,EAAEF,KAAK,CAACC,MAAN,CAAaE;AAAvB,IAFA,EAGA,gCAAeH,KAAK,CAACI,OAAN,CAAcC,SAA7B,CAHA,EAIA,iCAAgBL,KAAK,CAACI,OAAN,CAAcE,UAA9B,CAJA,EAKA,iCAAgBN,KAAK,CAACI,OAAN,CAAcG,UAA9B,CALA,CADS;AAAA,CAAb;;AAUAR,IAAI,CAACS,eAAL,GAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXP,UAAAA,IADW,GACFO,OAAO,CAACC,KADN,CACXR,IADW;AAAA;AAAA,2CAEDP,KAAK,mDAA4CO,IAA5C,EAFJ;;AAAA;AAEbS,UAAAA,GAFa;AAAA;AAAA,2CAGGA,GAAG,CAACC,IAAJ,EAHH;;AAAA;AAGbR,UAAAA,OAHa;AAKnBS,UAAAA,OAAO,CAACC,GAAR,4BAAgCV,OAAO,CAACF,IAAxC;AALmB,2CAOZ;AAAEE,YAAAA,OAAO,EAAPA;AAAF,WAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeL,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Layout from './../components/Layout';\r\n\r\nconst colorStyle = {\r\n    color: 'white'\r\n}\r\n\r\nconst Info = (props) => (\r\n    <Layout>\r\n    <h1 style={colorStyle}>{props.region.name}</h1>\r\n    <img src={props.region.flag} />\r\n    <p>Langauges: {props.country.languages}</p>\r\n    <p>Population: {props.country.population}</p>\r\n    <p>Currencies: {props.country.currencies}</p>\r\n    </Layout>\r\n)\r\n\r\nInfo.getInitialProps = async function (context) {\r\n    const { name } = context.query\r\n    const res = await fetch(`https://restcountries.eu/rest/v2/africa/${name}`)\r\n    const country = await res.json()\r\n\r\n    console.log(`Fetched country: ${country.name}`)\r\n\r\n    return { country }\r\n}\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}