{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\derec\\\\Desktop\\\\task11\\\\pages\\\\info.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport Layout from './../components/Layout';\nvar colorStyle = {\n  color: 'black'\n};\n\nvar Info = function Info(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    style: colorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, props.region.name), __jsx(\"img\", {\n    src: props.region.flag,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }), __jsx(\"p\", {\n    style: colorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"Langauges: \", props.region.languages), __jsx(\"p\", {\n    style: colorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"Population: \", props.region.population), __jsx(\"p\", {\n    style: colorStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"Currencies: \", props.region.currencies));\n};\n\nInfo.getInitialProps = function _callee() {\n  var res, region;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://restcountries.eu/rest/v2/regionalbloc/\".concat(region.name)));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          region = _context.sent;\n          console.log(\"Fetched country: \".concat(region.name));\n          return _context.abrupt(\"return\", {\n            region: region\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Info;","map":{"version":3,"sources":["C:/Users/derec/Desktop/task11/pages/info.js"],"names":["fetch","Layout","colorStyle","color","Info","props","region","name","flag","languages","population","currencies","getInitialProps","res","json","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,IAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE;AADQ,CAAnB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SACT,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAI,IAAA,KAAK,EAAEH,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBG,KAAK,CAACC,MAAN,CAAaC,IAArC,CADA,EAEA;AAAK,IAAA,GAAG,EAAEF,KAAK,CAACC,MAAN,CAAaE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAGA;AAAG,IAAA,KAAK,EAAEN,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkCG,KAAK,CAACC,MAAN,CAAaG,SAA/C,CAHA,EAIA;AAAG,IAAA,KAAK,EAAEP,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmCG,KAAK,CAACC,MAAN,CAAaI,UAAhD,CAJA,EAKA;AAAG,IAAA,KAAK,EAAER,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmCG,KAAK,CAACC,MAAN,CAAaK,UAAhD,CALA,CADS;AAAA,CAAb;;AAUAP,IAAI,CAACQ,eAAL,GAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEDZ,KAAK,yDAAkDM,MAAM,CAACC,IAAzD,EAFJ;;AAAA;AAEbM,UAAAA,GAFa;AAAA;AAAA,2CAGEA,GAAG,CAACC,IAAJ,EAHF;;AAAA;AAGbR,UAAAA,MAHa;AAKnBS,UAAAA,OAAO,CAACC,GAAR,4BAAgCV,MAAM,CAACC,IAAvC;AALmB,2CAOZ;AAAED,YAAAA,MAAM,EAANA;AAAF,WAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAUA,eAAeF,IAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\nimport Layout from './../components/Layout';\r\n\r\nconst colorStyle = {\r\n    color: 'black'\r\n}\r\n\r\nconst Info = (props) => (\r\n    <Layout>\r\n    <h1 style={colorStyle}>{props.region.name}</h1>\r\n    <img src={props.region.flag} />\r\n    <p style={colorStyle}>Langauges: {props.region.languages}</p>\r\n    <p style={colorStyle}>Population: {props.region.population}</p>\r\n    <p style={colorStyle}>Currencies: {props.region.currencies}</p>\r\n    </Layout>\r\n)\r\n\r\nInfo.getInitialProps = async function () {\r\n    //const { name } = context.query\r\n    const res = await fetch(`https://restcountries.eu/rest/v2/regionalbloc/${region.name}`)\r\n    const region = await res.json()\r\n\r\n    console.log(`Fetched country: ${region.name}`)\r\n\r\n    return { region }\r\n}\r\n\r\nexport default Info;"]},"metadata":{},"sourceType":"module"}